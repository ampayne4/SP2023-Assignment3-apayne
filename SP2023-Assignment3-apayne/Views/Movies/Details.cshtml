@model SP2023_Assignment3_apayne.Models.MovieActorsVM

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4>Movie</h4>
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Movie.Title)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Movie.Title)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Movie.IMDB)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Movie.IMDB)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Movie.Genre)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Movie.Genre)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Movie.ReleaseYear)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Movie.ReleaseYear)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Movie.Poster)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Movie.Poster)
        </dd>
    </dl>
</div>
<div>
    <a asp-action="Edit" asp-route-id="@Model?.Movie.Id">Edit</a> |
    <a asp-action="Index">Back to List</a>
</div>

<h1>Actors</h1>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.MovieActor[0].Actor.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.MovieActor[0].Actor.Gender)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.MovieActor[0].Actor.Age)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.MovieActor[0].Actor.IMDB)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.MovieActor[0].Actor.Photo)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.MovieActor)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Actor.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Actor.Gender)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Actor.Age)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Actor.IMDB)
                </td>
                <td>
                    @if (item.Actor.Photo != null)
                    {
                        @*var base64 = Convert.ToBase64String(item.Photo);
                        var imgSrc = string.Format("data:image/jpg;base64,{0}", base64);
                        <img src = "@imgSrc" height = "100" width="100" style="border-radius:50%" />*@

                        <img width="100" height="100" src="@Url.Action("GetActorPhoto", "Actors", new {item.Actor.Id})" />
                    }
                </td>
                @*<td>
            @Html.DisplayFor(modelItem => item.Photo)
            </td>*@
            </tr>
        }
    </tbody>
</table>

<h1>Tweets</h1>
<table>
    <tr>
        <td>Total Sentiment:</td>
        <td>@Html.DisplayFor(MovieActorsVM => MovieActorsVM.Sentiment)</td>
    </tr>
</table>
<table class="table">
    <thead>
        <tr>
            <th>
                Tweets
            </th>
            <th>
                Sentiments
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Tweets)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Text)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Sentiment)
                </td>
            </tr>
        }
    </tbody>
</table>
